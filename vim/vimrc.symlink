set nocompatible                " choose no compatibility with legacy vi
filetype off

"" Vundle
set runtimepath+=~/.vim/bundle/vundle/
call vundle#rc()
Bundle 'gmarik/vundle'

" File navigation, searching and versioning.
Bundle 'mileszs/ack.vim'
Bundle 'kien/ctrlp.vim'
Bundle 'tpope/vim-fugitive'
Bundle 'scrooloose/nerdtree'

" Editing helpers.
Bundle 'tpope/vim-surround'
Bundle 'tpope/vim-commentary'
Bundle 'tpope/vim-endwise'
Bundle 'sickill/vim-pasta'

" Language packs.
Bundle 'vim-ruby/vim-ruby'
Bundle 'tpope/vim-rails'
Bundle 'pangloss/vim-javascript'
Bundle 'kchmck/vim-coffee-script'
Bundle 'tpope/vim-markdown'
Bundle 'groenewege/vim-less'
Bundle 'jnwhiteh/vim-golang'

" Colorscheme
Bundle 'altercation/vim-colors-solarized'

syntax enable
set encoding=utf-8
set showcmd                     " display incomplete commands
filetype plugin indent on       " load file type plugins + indentation
set number                      " show line numbers
set ruler                       " show line and column number
set cursorline                  " highlight the line containing the cursor
set laststatus=2                " always show the status bar
set scrolloff=3                 " leave some context when scrolling
set hidden                      " allow buffers to be hidden

" Use , as the leader key.
let mapleader=","

"" List chars
set list                        " Show invisible characters
set listchars=""                " Reset the listchars
set listchars=tab:\ \           " a tab should display as "  ", trailing whitespace as "."
set listchars+=trail:.          " show trailing spaces as dots

"" Whitespace
set nowrap                      " don't wrap lines
set tabstop=2 shiftwidth=2      " a tab is two spaces (or set this to 4)
set expandtab                   " use spaces, not tabs (optional)
set backspace=indent,eol,start  " backspace through everything in insert mode

"" Searching
set hlsearch                    " highlight matches
set incsearch                   " incremental searching
set ignorecase                  " searches are case insensitive...
set smartcase                   " ... unless they contain at least one capital letter

"" zsh like command mode completion
set wildmode=longest,list:longest,full
set wildmenu
set complete=.,b,u,]

"" Text formatting
set wrap

"" Backup and swap files
set backupdir=~/.vim/_backup//    " where to put backup files.
set directory=~/.vim/_temp//      " where to put swap files.

set background=dark
colorscheme solarized

" Remember last location in file, but not for commit messages.
" see :help last-position-jump
au BufReadPost * if &filetype !~ '^git\c' && line("'\"") > 0 && line("'\"") <= line("$")
  \| exe "normal! g`\"" | endif

" Configure ack.vim to use ag(1)
let g:ackprg = 'ag --nogroup --nocolor --column'

""""""
"""""" Key mappings
""""""

" Cleanup trailing whitespace and tabs with F5
nnoremap <silent> <F5> :let _s=@/<Bar>:%s/\s\+$//e<Bar>:let @/=_s<Bar>:nohl<CR>:retab<CR>

" Jump between buffers
nnoremap <leader><leader> <C-^>

" Use leader-f to start an ack search.
nnoremap <leader>f :Ack!<SPACE>

" Map Tab to jump between brackets, quotes etc.
nnoremap <TAB> %

" This unsets the "last search pattern" register by hitting return
nnoremap <CR> :noh<CR><CR>

" Quickly jump in and out of paste mode.
nnoremap <leader>p :set paste!<CR>:set paste?<CR>

" CtrlP custom ignores
let g:ctrlp_custom_ignore = {
  \ 'dir':  '\.git$\|\.hg$\|\.svn$\|public/uploads$',
  \ 'file': '\.pyc$\|\.pyo$\|\.rbc$|\.rbo$\|\.class$\|\.o$\|\~$\',
  \ }

" Man page viewer
runtime ftplugin/man.vim

" Map W and Q to their smaller counterparts.
command! W :w
command! Q :q
